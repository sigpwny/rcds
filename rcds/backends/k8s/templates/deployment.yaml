{% import '_helpers.jinja' as helpers with context %}
{% set has_healthcheck = container.config.healthcheck is defined and container.config.healthcheck.enabled %}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ namespace }}
  name: {{ container.name }}
  labels:
    {{ helpers.common_labels() | indent(4) }}
    {{ helpers.container_labels() | indent(4) }}
spec:
  replicas: {{ container.config.replicas }}
  selector:
    matchLabels:
      {{ helpers.common_labels() | indent(6) }}
      {{ helpers.container_labels() | indent(6) }}
  template:
    metadata:
      labels:
        {{ helpers.common_labels() | indent(8) }}
        {{ helpers.container_labels() | indent(8) }}
    spec:
      containers:
        - name: challenge
          image: {{ container.config.challenge.image }}
          {% if container.config.challenge.ports %}
          ports:
          {% for port in container.config.challenge.ports %}
            - containerPort: {{ port }}
              name: port-{{ port }}
          {% endfor %}
          {% endif %}
          {% if container.config.challenge.environment %}
          env:
          {% for name, value in container.config.challenge.environment.items() %}
            - name: {{ name }}
              value: {{ value | quote }}
          {% endfor %}
          {% endif %}
          {% if container.config.challenge.resources %}
          resources:
            {{ container.config.challenge.resources | yaml(12) }}
          {% endif %}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: {{ container.config.challenge.readOnlyRootFilesystem }}
          {% if container.config.challenge.tmpfsMounts | first is defined %}
          volumeMounts:
            {% for tmpfsMount in container.config.challenge.tmpfsMounts %}
            - name: {{ tmpfsMount }}
              mountPath: {{ tmpfsMount }}
            {% endfor %}
          {% endif %}
          {% if has_healthcheck %}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 45281
            initialDelaySeconds: 45
            timeoutSeconds: 3
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: 45281
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
          {% endif %}
        {% if has_healthcheck %}
        - name: healthcheck
          image: {{ container.config.healthcheck.image }}
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
        {% endif %}
      {% if container.config.challenge.tmpfsMounts | first is defined %}
      volumes:
        {% for tmpfsMount in container.config.challenge.tmpfsMounts %}
        - name: {{ tmpfsMount }}
          emptyDir:
            medium: Memory
            sizeLimit: 256Mi
        {% endfor %}
      {% endif %}
      automountServiceAccountToken: false
      enableServiceLinks: false
      {% if options.tolerations %}
      tolerations:
        {{ options.tolerations | yaml(8) }}
      {% endif %}
      {% if options.affinity %}
      affinity:
        {{ options.affinity | yaml(8) }}
      {% endif %}
